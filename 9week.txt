9a) Write a shell script to find factorial of a given integer.
echo "Enter a number"
read num
fact=1
while [ $num -gt 1 ]
do
 fact=$((fact * num)) #fact = fact * num
 num=$((num - 1)) #num = num - 1
done
echo $fact



9 b) Write a C program to create a child process and allow parent to display ‘parent’ and child to display ‘child’. #include <stdio.h>
#include <unistd.h>
#include <sys/wait.h>
int main(void)
{
int pid;
int status;
pid = fork( );
if(pid < 0)
{
perror("bad fork");
exit(1);
}
else if (pid == 0)
{
printf("I am the child process with id: %d \n", getpid( ));
}
else if (pid > 0)
{
wait(&status);
printf("I am the parent process with id: %d \n", getpid( ));
}
}



9 c) Write a C program in which a parent writes a message to a pipe and the child reads the message
#include<stdio.h>
#include<stdlib.h>
#include<sys/types.h>
#include<unistd.h>
int main()
{
int pfds[2],n;
char buffer[100];
if(pipe(pfds) < 0)
{
perror("Pipe is not created");
exit(1);
}
if(fork()>0)
{
printf("Parent passing value to child\n");
write(pfds[1],"Hello\n",6);
wait( );
}
else if (fork()==0)
{
printf("Child printing received file\n");
n=read(pfds[0],buffer,100);
write(1,buffer,n);
}
}